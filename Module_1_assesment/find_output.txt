6) Find the output of the following // Consider the compiler is 32-bit machine 

#include<stdio.h>
typedef struct{
    int A,
    char B;
    char C;
}infoData;

int main(int argc, char *argv[]) {
    //Calculate size of structure
    printf("\n Size of structure = %d\n\n",sizeof(infoData));
    return 0;
}

ANSWER:
Size of structure = 8 bytes
* Even though we only need 6 bytes of memory, but due to structure padding 
  the compier allocates 8 bytes of memory.
_____________________________________________________________________________________________

7) Find the output of the following // Consider the compiler is 32-bit machine 

#include<stdio.h>
typedef struct{
    char A,
    double B;
    char C;
}infoData;

int main(int argc, char *argv[]) {
    //Calculate size of structure
    printf("\n Size of structure = %d\n\n",sizeof(infoData));
    return 0;
}

ANSWER:
Size of structure = 16 bytes
* Even though we only need 10 bytes of memory, but due to structure padding 
  the compier allocates 16 bytes of memory.
_______________________________________________________________________________________________

8) Find the output of the following // Consider the compiler is 32-bit machine.

#include<stdio.h>
#include<stdint.h>

int main() {
    unsigned int var = 0x12345678;
    unsigned int rev = 0;

    for (int i = 0; i < 8; i++) {
        rev = (rev << 4) | ((var >> (4 * i)) & 0xF);
    }
    printf("%X", rev);
    return 0;
}

ANSWER:
87654321

